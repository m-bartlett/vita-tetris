uniform sampler2D gTexture : TEXUNIT0;

struct fragment_t {
    float2 texcoord;
    unsigned char block_type;
    float diffusion;
};

float4 main(
    fragment_t fragment : TEXCOORD0
) {

    // float3 texel = tex2D(gTexture, fragment.texcoord);
    float intensity = tex2D(gTexture, fragment.texcoord);
    // float intensity = (texel.x+texel.y+texel.z)/2.75;
    // float intensity = sqrt(texel.x*texel.x + texel.y*texel.y + texel.z*texel.z);

    float3 color;
         if (fragment.block_type == 1) color = float3(0.2431, 0.8627, 1.0); // I
    else if (fragment.block_type == 2) color = float3(1.0, 0.7750, 0.1216); // O
    else if (fragment.block_type == 3) color = float3(0.7920, 0.1726, 0.6745); // T
    else if (fragment.block_type == 4) color = float3(0.1255, 0.3333, 0.8314); // J
    else if (fragment.block_type == 5) color = float3(1.0, 0.406, 0.029); // L
    else if (fragment.block_type == 6) color = float3(0.4980, 0.8275, 0.0824); // S
    else                               color = float3(0.9333, 0.102, 0.2118); // Z

    color *= intensity * max(fragment.diffusion*fragment.diffusion*1.5, 0.5);
    return float4(color, 1);
}
